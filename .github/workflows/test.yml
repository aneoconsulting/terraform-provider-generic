on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

name: Test

env:
  NAME: generic

jobs:
  dump-ctx:
    name: Context
    runs-on: ubuntu-latest
    steps:
      - name: Dump Github context
        uses: crazy-max/ghaction-dump-context@v2
  build-and-release:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-musl, os: linux, arch: amd64, runner: ubuntu-latest, run: true }
          - { target: i686-unknown-linux-musl, os: linux, arch: "386", runner: ubuntu-latest, run: true }
          - { target: aarch64-unknown-linux-musl, os: linux, arch: arm64, runner: ubuntu-latest, run: true }
          - { target: arm-unknown-linux-musleabi, os: linux, arch: arm, runner: ubuntu-latest, run: true }
          - { target: x86_64-unknown-freebsd, os: freebsd, arch: amd64, runner: ubuntu-latest, run: false }
          - { target: i686-unknown-freebsd, os: freebsd, arch: "386", runner: ubuntu-latest, run: false }
          - { target: x86_64-apple-darwin, os: darwin, arch: amd64, runner: macos-latest, run: true }
          - { target: aarch64-apple-darwin, os: darwin, arch: arm64, runner: macos-latest, run: true }
          - { target: x86_64-pc-windows-msvc, os: windows, arch: amd64, runner: windows-latest, run: true }
          - { target: i686-pc-windows-msvc, os: windows, arch: "386", runner: windows-latest, run: true }
          # - { target: aarch64-pc-windows-msvc, os: windows, arch: arm64, runner: windows-latest, run: false } # Does not compile
          # - { target: wasm32-wasi, os: wasi, arch: wasm, runner: ubuntu-latest, run: false } # Does not compile
    runs-on: ${{ matrix.job.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: protoc,sccache
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}
          toolchain: 1.76.0
          components: rust-src,rustfmt,clippy
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.job.target }}
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2.7.3
        with:
          shared-key: "build-${{ matrix.job.target }}"
      - name: Build
        run: |
          cargo build --locked --release --target ${{ matrix.job.target }}
      - name: Test
        if: matrix.job.run
        run: |
          cargo test --locked --release --target ${{ matrix.job.target }}
      - name: Format
        run: |
          cargo fmt --check
      - name: Clippy
        run: |
          cargo clippy --no-deps -- -Dwarnings -Dunused_extern_crates
      - name: Doc
        if: matrix.job.target == 'x86_64-unknown-linux-musl'
        run: |
          tools/generate-docs --provider-name "${NAME}" --provider-binary "target/x86_64-unknown-linux-musl/release/terraform-provider-${NAME}"
          git diff --exit-code --name-only docs
